import numpy as np

T = np.array([[4., -2, -2, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
              [-1, 4., -1, 0., 0., -2, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
              [0., -1, 4., -1, 0., 0., -2, 0., 0., 0., 0., 0., 0., 0., 0., 0.],
              [0., 0., -1, 4., 0., 0., 0., -2, 0., 0., 0., 0., 0., 0., 0., 0.],
              [-1, 0., 0., 0., 4., -2, 0., 0., -1, 0., 0., 0., 0., 0., 0., 0.],
              [0., -1, 0., 0., -1, 4., -1, 0., 0., -1, 0., 0., 0., 0., 0., 0.],
              [0., 0., -1, 0., 0., -1, 4., -1, 0., 0., -1, 0., 0., 0., 0., 0.],
              [0., 0., 0., -1, 0., 0., -1, 4., 0., 0., 0., -1, 0., 0., 0., 0.],
              [0., 0., 0., 0., -1, 0., 0., 0., 4., -2, 0., 0., -1, 0., 0., 0.],
              [0., 0., 0., 0., 0., -1, 0., 0., -1, 4., -1, 0., 0., -1, 0., 0.],
              [0., 0., 0., 0., 0., 0., -1, 0., 0., -1, 4., -1, 0., 0., -1, 0.],
              [0., 0., 0., 0., 0., 0., 0., -1, 0., 0., -1, 4., 0., 0., 0., -1],
              [0., 0., 0., 0., 0., 0., 0., 0., -1, 0., 0., 0., 4., -2, 0., 0.],
              [0., 0., 0., 0., 0., 0., 0., 0., 0., -1, 0., 0., -1, 4., -1, 0.],
              [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1, 0., 0., -1, 4., -1],
              [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -1, 0., 0., -1, 4.]],dtype = np.float64)

b = np.array([[0.],[0.],[0.],[0.],[0.],[0.],[0.],[25],
              [0.],[0.],[0.],[50],[0.],[25],[50],[150]],dtype = np.float64)

T_1 = np.linalg.inv(T)
t = np.dot(T_1, b)

print(t.T)

import math
temper = np.array([[t[0],t[1],t[2],t[3], 0.],
                   [t[4],t[5],t[6],t[7], 25],
                   [t[8],t[9],t[10],t[11], 50],
                   [t[12],t[13],t[14],t[15],75],
                   [0.,25, 50, 75, 100]],dtype = np.float64)

qx = np.array([[0., 0., 0., 0., 0.],
               [0., 0., 0., 0., 0.],
               [0., 0., 0., 0., 0.],
               [0., 0., 0., 0., 0.],
               [0., 0., 0., 0., 0.]],dtype = np.float64)
qy = qx.copy()
q = qx.copy()
theta = qx.copy()

for j in range(1,4):
  for i in range(1,4):
    qx[j,i] = -0.49 * (temper[j,i+1]-temper[j,i-1])/20.
    qy[j,i] = -0.49 * (temper[j+1,i]-temper[j-1,i])/20.
    q[j,i] = math.sqrt(qx[j,i]*qx[j,i] + qy[j,i]*qy[j,i])
    if (qx[j,i] > 0):
      theta[j,i] = math.atan(qy[j,i]/qx[j,i])
    if (qx[j,i] < 0):
      theta[j,i] = math.atan(qy[j,i]/qx[j,i]) + 3.1415926

print(qx[1:4,1:4])
print(qy[1:4,1:4])
print(q[1:4,1:4])
print(theta[1:4,1:4])
